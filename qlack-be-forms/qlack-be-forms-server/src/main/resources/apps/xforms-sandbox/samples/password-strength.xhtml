<!--
    Copyright (C) 2009 Orbeon, Inc.

    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.

    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<html xmlns:xf="http://www.w3.org/2002/xforms"
      xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
      xmlns:ev="http://www.w3.org/2001/xml-events"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns="http://www.w3.org/1999/xhtml">

    <head>
        <title>XForms Password Strength Checker</title>
        <xf:model>
            <!-- This instance contains the password and its check -->
            <xf:instance id="password">
                <instance xmlns="">
                    <password/>
                    <password-check/>
                </instance>
            </xf:instance>

            <!-- This instance contains a description of the constraints as well as elements marked as valid/invalid -->
            <xf:instance id="conditions">
                <conditions xmlns="">
                    <condition>8-32 characters in length</condition>
                    <condition>1 or more numeric characters</condition>
                    <condition>Mix of upper- and lower-case alphabet characters</condition>
                    <condition>1 or more of the following punctuation symbols: &lt;b>!@#$%^&amp;*()_+|=\`{}[]:";'&lt;>?,./&lt;/b></condition>
                    <condition>No disallowed characters</condition>
                    <condition>Password valid</condition>
                    <condition>Password confirmed</condition>
                </conditions>
            </xf:instance>

            <!-- Convenient constants/variables -->
            <xf:var name="numbers" value="(string-to-codepoints('0') to string-to-codepoints('9'))" as="xs:integer+"/>
            <xf:var name="lowercase" value="(string-to-codepoints('a') to string-to-codepoints('z'))" as="xs:integer+"/>
            <xf:var name="uppercase" value="(string-to-codepoints('A') to string-to-codepoints('Z'))" as="xs:integer+"/>
            <xf:var name="special" value="string-to-codepoints('!@#$%^&amp;*()_+|=\`{}[]:&quot;;''&lt;>?,./')" as="xs:integer+"/>
            <xf:var name="all" value="($numbers, $lowercase, $uppercase, $special)" as="xs:integer+"/>

            <xf:var name="password" value="string-to-codepoints(instance('password')/password)" as="xs:integer+"/>
            <xf:var name="length" value="string-length(instance('password')/password)" as="xs:integer"/>

            <!-- Compute validity for all conditions -->
            <xf:bind ref="instance('conditions')">
                <xf:bind ref="condition[1]" constraint="$length ge 8 and $length lt 32"/>
                <!-- NOTE: Sequence comparison is at work here: condition is true iif at least one character is present in the set -->
                <xf:bind ref="condition[2]" constraint="$password = $numbers"/>
                <xf:bind ref="condition[3]" constraint="$password = $lowercase and $password = $uppercase"/>
                <xf:bind ref="condition[4]" constraint="$password = $special"/>
                <xf:bind ref="condition[5]" constraint="$length gt 0 and not((for $c in $password return $c = $all) = false())"/>
                <!-- NOTE: Evaluation order is important here because the validity of the previous elements must have been determined first -->
                <xf:bind ref="condition[6]" constraint="not((for $v in preceding-sibling::condition return valid($v)) = false())"/>
                <xf:bind ref="condition[7]" constraint="instance('password')/password = instance('password')/password-check and valid(preceding-sibling::condition[1])"/>
            </xf:bind>

            <!-- Compute validity of password and check -->
            <xf:bind ref="password" constraint="valid(instance('conditions')/condition[6])"/>
            <xf:bind ref="password-check" constraint="valid(instance('conditions')/condition[7])"/>
            
        </xf:model>
        <style type="text/css">
            .xforms-label { font-weight: bold; margin-right: 1em; display: block }
            .my-valid { background-color: green; color: white }
            .my-invalid { background-color: red; color: white }
            .my-table td, .my-table th { padding: .3em }
        </style>
    </head>
    <body>

        <p>
            The following example checks a set of conditions on your password:
        </p>

        <table class="my-table">
            <tbody>
                <tr>
                    <th>Requirement</th>
                    <th>Validated</th>
                </tr>
                <!-- Repeat over all condition elements -->
                <xf:repeat ref="instance('conditions')/condition">
                    <tr>
                        <td>
                            <!-- Output condition description -->
                            <xf:output value="." mediatype="text/html"/>
                        </td>
                        <!-- Note the dynamic CSS class based on the current condition element's validity -->
                        <td align="center" class="my-{if (valid()) then 'valid' else 'invalid'}">
                            <!--  Output "true" or "false" based on the current condition element's validity -->
                            <xf:output value="valid()"/>
                        </td>
                    </tr>
                </xf:repeat>
            </tbody>
        </table>

        <hr/>

        <!-- Password field -->
        <xf:input ref="password" incremental="true">
            <xf:label>New password</xf:label>
            <xf:alert>Password invalid</xf:alert>
        </xf:input>
        <br/>
        <!-- Password confirmation -->
        <xf:input ref="password-check" incremental="true">
            <xf:label>Confirm new password</xf:label>
            <xf:alert>Password confirmation invalid</xf:alert>
        </xf:input>

    </body>
</html>
