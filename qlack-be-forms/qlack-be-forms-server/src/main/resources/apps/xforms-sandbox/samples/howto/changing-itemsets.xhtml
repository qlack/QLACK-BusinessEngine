<xh:html xmlns:xf="http://www.w3.org/2002/xforms"
    xmlns:f="http://orbeon.org/oxf/xml/formatting"
    xmlns:xh="http://www.w3.org/1999/xhtml"
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
    xmlns:widget="http://orbeon.org/oxf/xml/widget"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
    xmlns:xbl="http://www.w3.org/ns/xbl"
    xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
    xmlns:exf="http://www.exforms.org/exf/1-0"
    xmlns:howto="http://www.orbeon.com/howto">

    <xh:head>
        <xh:title>Out of bound</xh:title>
        <xf:model>

            <!-- Instance with state selected by user -->
            <xf:instance>
                <instance>
                    <initial-state label="" valid=""/>
                    <removed-edit-state label="California" valid="">ca</removed-edit-state>
                    <removed-view-state label="California" valid="">ca</removed-view-state>
                </instance>
            </xf:instance>

            <!-- Selected state is only valid if it is in the itemset -->
            <xf:bind ref="*" constraint="@valid = 'true' and . != 'nv'"/>
            <xf:bind ref="removed-view-state" readonly="true()"/>

            <!-- List of possible states -->
            <xf:instance id="states">
                <states>
                    <state value="ma">Maryland</state>
                    <state value="ca">California</state>
                    <state value="co">Colorado</state>
                    <state value="nv">Nevada</state>
                </states>
            </xf:instance>
        </xf:model>

        <xbl:xbl>
            <xbl:binding id="howto-changing-itemset-select1" element="howto|changing-itemset-select1">
                <xbl:implementation>
                    <xf:model>
                        <xf:instance>
                            <alert user-alert=""/>
                        </xf:instance>
                    </xf:model>
                </xbl:implementation>
                <xbl:template>
                    <xf:group appearance="xxf:internal" id="container">
                        <!-- Pointers to nodes in the outside world -->
                        <xf:var name="value"><xxf:value xbl:attr="value=value-ref" xxbl:scope="outer"/></xf:var>
                        <xf:var name="label"><xxf:value xbl:attr="value=label-ref" xxbl:scope="outer"/></xf:var>
                        <xf:var name="valid"><xxf:value xbl:attr="value=valid-ref" xxbl:scope="outer"/></xf:var>
                        <xf:var name="alert" value="."/>
                        <xf:var name="is-readonly" value="exf:readonly($value)"/>
                        <!-- Expose a "value" for the itemset, so we can have an event when it changes -->
                        <xf:group ref="xxf:itemset('select1', 'json')" id="itemset" appearance="xxf:internal"/>
                        <xf:group ref="$value[$alert/@user-alert = '']" appearance="xxf:internal">
                            <xbl:content includes="xf|alert"/>
                            <xf:setvalue ev:event="xforms-enabled" ref="$alert/@user-alert" value="event('xxf:alert')"/>
                        </xf:group>
                        <!-- Update valid and alert when the value or the itemset changes  -->
                        <xf:var name="is-out-of-bound" value="not($value = xxf:itemset('select1', 'xml')//item/value)"/>
                        <xf:var name="new-alert" value="if ($is-out-of-bound) then
                            concat('A value was selected (', $label, ') and this value is not available anymore.')
                            else $alert/@user-alert"/>
                        <xf:action ev:event="xforms-enabled xforms-value-changed" ev:observer="select1 itemset">
                            <xf:var name="new-label" value="xxf:itemset('select1', 'xml')//item[value = $value]/label"/>
                            <xf:setvalue if="exists($new-label)" ref="$label" value="$new-label"/>
                            <xf:setvalue ref="$alert" value="$new-alert"/>
                            <xf:setvalue ref="$valid" value="not($is-out-of-bound)"/>
                        </xf:action>
                        <!-- If not read-only: selection control -->
                        <xh:span style="{if ($is-readonly) then 'display: none' else ''}">
                            <xf:select1 xbl:attr="appearance" ref="$value" id="select1">
                                <xf:dispatch ev:event="xforms-enabled xforms-value-changed" name="itemset-or-value-changed" targetid="container"/>
                                <xf:alert ref="$alert"/>
                                <xbl:content includes="xf|item,xf|itemset,xf|label,xf|help,xf|hint"/>
                            </xf:select1>
                            <xf:output value="if ($is-out-of-bound) then $new-alert else ()"/>
                        </xh:span>
                        <!-- If readonly: show label -->
                        <xh:span style="{if (not($is-readonly)) then 'display: none' else ''}">
                            <xf:output value="$label"/>
                            <xf:group ref=".[$is-out-of-bound]">(this value is not valid anymore)</xf:group>
                        </xh:span>
                    </xf:group>
                </xbl:template>
            </xbl:binding>
        </xbl:xbl>

        <xh:style type="text/css">
            p { margin-top: 2em }
            .previous-state { font-weight: bold }
            .xbl-fr-error-summary { margin-top: 1em; }
            .fr-error-summary-body { background-color: #F2D6C6; padding: .5em 0 .5em 0; width: 40em; }
            .xbl-fr-button { display: block; margin-top: 1em }
            .xbl-fr-error-summary .fr-error-alert { color: black; }
            .xforms-alert.xforms-active { display: none }
            .xforms-visited .xforms-alert.xforms-active { display: inline-block }
        </xh:style>

    </xh:head>
    <xh:body>

        <xh:fieldset>
            <xh:legend>California is available</xh:legend>
            <xf:group ref="initial-state">
                <howto:changing-itemset-select1 value-ref="." label-ref="@label" valid-ref="@valid" appearance="minimal" id="initial-state">
                    <xf:label>State: </xf:label>
                    <xf:item>
                        <xf:label>Select...</xf:label>
                        <xf:value/>
                    </xf:item>
                    <xf:itemset ref="instance('states')/state">
                        <xf:value ref="@value"/>
                        <xf:label ref="."/>
                    </xf:itemset>
                    <xf:alert>Nevada is not a valid State</xf:alert>
                </howto:changing-itemset-select1>
                <fr:error-summary observer="initial-state"/>
            </xf:group>
        </xh:fieldset>

        <xh:fieldset>
            <xh:legend>California selected but not available: edit case</xh:legend>
            <xf:group ref="removed-edit-state">
                <howto:changing-itemset-select1 value-ref="." label-ref="@label" valid-ref="@valid" appearance="minimal" id="removed-edit-state">
                    <xf:label>State: </xf:label>
                    <xf:alert>Nevada is not a valid State</xf:alert>
                    <xf:item>
                        <xf:label>Select...</xf:label>
                        <xf:value/>
                    </xf:item>
                    <xf:itemset ref="instance('states')/state[@value != 'ca']">
                        <xf:value ref="@value"/>
                        <xf:label ref="."/>
                    </xf:itemset>
                </howto:changing-itemset-select1>
                <xf:trigger>
                    <xf:label>Save</xf:label>
                    <xf:dispatch ev:event="DOMActivate" name="fr-visit-all" targetid="removed-edit-state-error-summary"/>
                </xf:trigger>
                <fr:error-summary id="removed-edit-state-error-summary" observer="removed-edit-state"/>
            </xf:group>
        </xh:fieldset>

        <xh:fieldset>
            <xh:legend>California selected but not available: view case</xh:legend>
            <xf:group ref="removed-view-state">
                <howto:changing-itemset-select1 value-ref="." label-ref="@label" valid-ref="@valid" appearance="minimal" id="removed-view-state">
                    <xf:label>State: </xf:label>
                    <xf:alert>Nevada is not a valid State</xf:alert>
                    <xf:item>
                        <xf:label>Select...</xf:label>
                        <xf:value/>
                    </xf:item>
                    <xf:itemset ref="instance('states')/state[@value != 'ca']">
                        <xf:value ref="@value"/>
                        <xf:label ref="."/>
                    </xf:itemset>
                </howto:changing-itemset-select1>
                <fr:error-summary id="removed-view-state-error-summary" observer="removed-view-state"/>
            </xf:group>
        </xh:fieldset>

    </xh:body>
</xh:html>
